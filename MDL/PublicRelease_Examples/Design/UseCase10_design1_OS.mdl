# UseCase10 : Multiple distribution compartments (2cmpt model) 
# Original version (ESTIMATION)
# Dosing regimen: single oral administration (at time 0)
# Structural model : 1 compartment model (CL,V and TLAG)
# Covariate model : Weight on V and CL 
# Variability model: 
#   - IIV on CL, V, ka and TLAG
#   - Correlation between CL and V random variables
#   - Combined residual error model

# PFIM: out of scope (model described through compartments)
# Changes
# removed correlation between CL and V random variables
# removed Tlag from the model [Note: could keep Tlag without IIV and fixed]
# removed covariate effects


warfarin_PK_PRED_par = parObj {

	# By default a parameter is to be estimated if fix is omitted
 	STRUCTURAL{
      POP_CL: {value=0.1, lo=0.001}
      POP_VC: {value=8, lo=0.001}
      POP_Q: {value=0.2, lo=0.001}
      POP_VP: {value=20, lo=0.001}
      POP_KA: {value=0.362, lo=0.001}
      POP_BETA_CL_WT: {value=0.75 ,fix=true}
      POP_BETA_V_WT: {value=1 ,fix=true}
   }# end STRUCTURAL

   VARIABILITY{
      PPV_CL: {value=0.1}
      PPV_VC: {value=0.1}
      CORR_CL_VC : {value=0.01}
      PPV_Q: {value=0.1}
      PPV_VP: {value=0.1}
      PPV_KA: {value=0.1}
      RUV_PROP: {value=0.1, lo=0}
      RUV_ADD: {value=0.1, lo=0}
    }# end VARIABILITY
} # end of parameter object 

warfarin_PK_PRED_mdl = mdlObj {
	IDV { T }

	VARIABILITY_LEVELS(reference=ID){
		ID : { level=2, type is parameter }
		DV : { level=1, type is observation }
   }
   
   COVARIATES{
      WT
      logtWT
   }# end COVARIATES

   STRUCTURAL_PARAMETERS{
      POP_CL
      POP_VC
      POP_Q
      POP_VP
      POP_KA
      POP_BETA_CL_WT
      POP_BETA_V_WT
   }# end STRUCTURAL_PARAMETERS

   VARIABILITY_PARAMETERS{
      PPV_CL
      PPV_VC
      CORR_CL_VC
      PPV_Q
      PPV_VP
      PPV_KA
      RUV_PROP
      RUV_ADD
   }# end VARIABILITY_PARAMETERS

   GROUP_VARIABLES{
   }# end GROUP_VARIABLES
	
	RANDOM_VARIABLE_DEFINITION(level=ID) {
      eta_PPV_CL ~ Normal(mean=0, sd=PPV_CL)
      eta_PPV_VC ~ Normal(mean=0, sd=PPV_VC)
      eta_PPV_Q ~ Normal(mean=0, sd=PPV_Q)
      eta_PPV_VP ~ Normal(mean=0, sd=PPV_VP)
      eta_PPV_KA ~ Normal(mean=0, sd=PPV_KA)
	} # end RANDOM_VARIABLE_DEFINITION 
	
	INDIVIDUAL_VARIABLES { 
     CL : {type is linear, trans is ln, pop = POP_CL, fixEff = [{coeff=POP_BETA_CL_WT, cov=logtWT}] , ranEff = eta_PPV_CL }
     VC  : {type is linear, trans is ln, pop = POP_VC, fixEff = [{coeff=POP_BETA_V_WT, cov=logtWT}] , ranEff = eta_PPV_VC }
     Q  : {type is linear, trans is ln, pop = POP_Q,  ranEff = eta_PPV_Q }
     VP  : {type is linear, trans is ln, pop = POP_VP,  ranEff = eta_PPV_VP }
     KA  : {type is linear, trans is ln, pop = POP_KA,  ranEff = eta_PPV_KA }
	} # end INDIVIDUAL_VARIABLES
	MODEL_PREDICTION{
   	COMPARTMENT{
      ##  Parameters = CL,V2,Q,V3,KA,S2,ALAG1
      INPUT_KA : {type is depot, to=CENTRAL, ka=KA}
      CENTRAL : {type is compartment }
      		:: {type is elimination, from=CENTRAL, v=VC, cl=CL}
      PERIPHERAL: {type is distribution, from=CENTRAL, kin=Q/VC, kout=Q/VP}
   }# end COMPARTMENT

      CC=CENTRAL/VC
   
   }# end MODEL_PREDICTION
	
	RANDOM_VARIABLE_DEFINITION(level=DV){
		EPS_Y ~ Normal(mean = 0, var = 1) # This maps the standard error model in PharmML. The error model is predefined. 
	}

	OBSERVATION {
   	 	Y : {type is combinedError1, additive = RUV_ADD, proportional=RUV_PROP,  eps=EPS_Y, prediction= CC}
	} # end OBSERVATION
} # end of model object

# Design object
warfarin_PK_PRED_design = designObj{
	DECLARED_VARIABLES{ 
		INPUT_KA::dosingTarget
		Y::observation
	}
	INTERVENTION{
		admin1 : {type is bolus, input=INPUT_KA, amount=100, doseTime=[0]}
	}

	SAMPLING{
	    window1 : {type is simple, sampleTime = [0.0001, 24, 36, 48, 72, 96, 120], outcome=Y }  
          }

  STUDY_DESIGN{
         arm1 : {
              armSize=33,
              interventionSequence={admin=admin1,start=0},
              samplingSequence={sample=window1,start=0}}
     }
}

# EVALUATE task - implicit version with target SETTINGS
warfarin_PK_PRED_taskEval = taskObj {
	EVALUATE{ 
		# Define tool specific settings in block
		TARGET_SETTINGS(target = "PFIM"){ # here we explicit some elements of the task
			set project = "warfarin_PK_CMPT",
			output = "Stdout_warfarin_PK_CMPT_eval.out",
			outputFIM = "",			
			option = 1,
			subjectsInput = 1 # Note for Gareth: the converter should change this to subjects.input
			}
		}
} # end of task object

# EVALUATE MOG
warfarin_PK_PRED_mog = mogObj {
	OBJECTS{
		warfarin_PK_PRED_design : { type is designObj }
		warfarin_PK_PRED_mdl : { type is mdlObj }
		warfarin_PK_PRED_par : { type is parObj }
		warfarin_PK_PRED_taskEval : { type is taskObj }
	}
}
