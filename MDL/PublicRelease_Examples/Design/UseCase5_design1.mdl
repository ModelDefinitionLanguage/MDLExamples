# UseCase5 : categorical and continuous covariate model for CL. Uses "type is linear" specification.
# Warfarin population pharmacokinetic model with categorical and transformed covariates
# Dosing regimen: single oral administration (at time 0)
# Structural model : 1 compartment model (CL,V and TLAG)
# Covariate model : Weight on V and CL, SEX on CL and AGE on CL 
# Variability model: 
#   - IIV on CL, V, ka and TLAG
#   - Correlation between CL and V random variables
#   - Combined residual error model

# PFIM modifications (EVALUATION)
# Changed from model defined using COMPARTMENT to model using analytical solutions as in Use Case 2
# removed Tlag and FORAL from the model
# removed correlation between CL and V random variables
# Design: 2 arms with doses of 100 and 200

# Design object
warfarin_PK_cov_design = designObj{
	DECLARED_VARIABLES{ 
		D::dosingTarget
		Y::observation
	}
	INTERVENTION{
		admin1 : {type is bolus, input=D, amount=100, doseTime=[0]}
		admin2 : {type is bolus, input=D, amount=200, doseTime=[0]}
	}

	SAMPLING{
	    window1 : {type is simple, sampleTime = [0.0001, 24, 36, 48, 72, 96, 120], outcome=Y }  
          }

  STUDY_DESIGN{
         arm1 : {
              armSize=17,
              interventionSequence={admin=admin1,start=0},
              samplingSequence={sample=window1,start=0}}
         arm2 : {
              armSize=17,
              interventionSequence={admin=admin2,start=0},
              samplingSequence={sample=window1,start=0}}
     }
}

warfarin_PK_covariate_par = parObj {
	# By default a parameter is to be estimated if fix is omitted
 	STRUCTURAL {
		POP_CL : { value = 0.1, lo = 0.001 }
		POP_V : { value = 8, lo = 0.001 } 
		POP_KA : { value = 0.362, lo = 0.001 }
		BETA_CL_WT : { value = 0.75, fix = true }
		BETA_V_WT : { value = 1, fix = true } 
		BETA_CL_AGE : { value=0.001 }
		POP_FCL_FEM : { value=1.5, lo = 0 }
		} # end STRUCTURAL
	VARIABILITY {
		PPV_CL : { value = 0.1 }
		PPV_V : { value = 0.1 }
		PPV_KA : { value = 0.1 }
		RUV_PROP : { value = 0.1, lo = 0 }
		RUV_ADD : { value = 0.1, lo = 0.0001 } 		
	} # end VARIABILITY
} # end of parameter object 

warfarin_PK_covariate_mdl = mdlObj {
	IDV { T }
	
	COVARIATES{
		WT
		AGE
		SEX withCategories {female, male} 
		logtWT = ln(WT/70)
		tAGE = AGE - 40
	}

	VARIABILITY_LEVELS(reference=ID){
		ID : { level = 2, type is parameter }
		DV : { level = 1, type is observation }
	}

	STRUCTURAL_PARAMETERS {
		POP_CL
		POP_V
		POP_KA
		BETA_CL_WT
		BETA_CL_AGE
		BETA_V_WT
		POP_FCL_FEM
	} # end STRUCTURAL_PARAMETERS
	
	VARIABILITY_PARAMETERS {
		PPV_CL
		PPV_V
		PPV_KA
		RUV_PROP
		RUV_ADD
		} # end VARIABILITY_PARAMETERS 

	RANDOM_VARIABLE_DEFINITION(level=ID) {
		ETA_CL ~ Normal(mean = 0, sd = PPV_CL)
		ETA_V ~ Normal(mean = 0, sd = PPV_V)
		ETA_KA ~ Normal(mean = 0, sd = PPV_KA)
	} # end RANDOM_VARIABLE_DEFINITION 
	
	INDIVIDUAL_VARIABLES { # This maps to the "Type 3" individual parameter definition in PharmML
	    CL : {type is linear, trans is ln, pop = POP_CL, fixEff = [
	    	  {coeff = BETA_CL_WT, cov = logtWT},
	    	  {coeff = POP_FCL_FEM, catCov = SEX.female },
	    	  {coeff = BETA_CL_AGE, cov = tAGE}
	    	  ], 
			  ranEff = ETA_CL }
	    V : {type is linear, trans is ln, pop = POP_V, fixEff = {coeff=BETA_V_WT, cov=logtWT} , ranEff = ETA_V }
	    KA : {type is linear, trans is ln, pop = POP_KA, ranEff = ETA_KA }
	} # end INDIVIDUAL_VARIABLES

	MODEL_PREDICTION {
	    D::dosingVar # dosing variable
	    CC =  (D/V) * KA/(KA-CL/V) * (exp(-CL/V * (T))- exp(-KA*(T)) )
	} # end MODEL_PREDICTION
	
	RANDOM_VARIABLE_DEFINITION(level=DV) {
		EPS_Y ~ Normal(mean = 0, var = 1) # This maps the standard error model in PharmML. The error model is predefined. 
	} # end RANDOM_VARIABLE_DEFINITION 

	OBSERVATION {
	    Y : {type is combinedError1, additive = RUV_ADD, proportional = RUV_PROP, eps = EPS_Y, prediction = CC } 
	} # end OBSERVATION
} # end of model object

warfarin_PK_evaltask = taskObj {
	EVALUATE{ 
			set fim = "P",
			previousFim = "",
			
# Suggested names of common options (options that would make sense to different software) - Options for methods (what we want the software to compute, 
# and the settings/options for these computations)
        graphOnly = false,
        typeIError = 0.05,
        powerComparison = false,
        nSubjectsComparison = false,
        equivalenceRange = [ln(0.8),ln(1.25)],
        powerEquivalence = false,
        nSubjectsEquivalence = false,
        typeIIError = 0.9
		# Define tool specific settings in block
		TARGET_SETTINGS(target = "PFIM"){ # here we explicit some elements of the task
			set project = "warfarin_PK_COV",
			output = "outputwarfarinPK_COV_eval.out",
			outputFIM = "",			
			option = 1,
			subjectsInput = 1 # Note for Gareth: the converter should change this to subjects.input
			}
	}
} # end of task object


warfarin_PK_ODE_mog = mogObj {
	OBJECTS{
		warfarin_PK_cov_design : { type is designObj }
		warfarin_PK_covariate_par : { type is parObj }
		warfarin_PK_covariate_mdl : { type is mdlObj }
		warfarin_PK_evaltask : { type is taskObj }
	}
}
