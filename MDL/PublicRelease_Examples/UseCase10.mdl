# UseCase10 : Multiple distribution compartments (2cmpt model) 
# Warfarin population pharmacokinetic model 
# Dosing regimen: Multiple dosing using an oral bolus and IV Infusion using PK Macros
# Structural model : 2 compartment model (CL,VC, KA, TLAG, Q, VP)
# Covariate model : Weight on VC and CL 
# Variability model: 
#   - IIV on CL, VC, ka, TLAG, Q, VP
#	- IIV specified as sd, correlations
#   - Covariance between CL and V random variables
#   - Combined residual error model

warfarin_PK_2Compartments_dat = dataObj {
	DECLARED_VARIABLES{INPUT_KA::dosingTarget CC_obs::observation}

	DATA_INPUT_VARIABLES {
		ID : { use is id }
		TIME : { use is idv }
		WT : { use is covariate }
		AMT : { use is amt, define = {1 in CMT as INPUT_KA} }
		CMT : { use is cmt }
		DVID : { use is dvid}
		DV : { use is dv, variable = CC_obs }
		MDV : { use is mdv }
		logtWT:{ use is covariate }  
	} # end DATA_INPUT_VARIABLES
	
	SOURCE {
	    srcfile : {file = "warfarin_conc_cmt.csv", 
            inputFormat is nonmemFormat}
	} # end SOURCE
} # end data object

warfarin_PK_2Compartments_par = parObj{
  STRUCTURAL{
      POP_CL: {value=0.1, lo=0.001}
      POP_VC: {value=8, lo=0.001}
      POP_Q: {value=0.2, lo=0.001}
      POP_VP: {value=20, lo=0.001}
      POP_KA: {value=0.362, lo=0.001}
      POP_TLAG: {value=1, lo=0.001}
      POP_BETA_CL_WT: {value=0.75 ,fix=true}
      POP_BETA_V_WT: {value=1 ,fix=true}
   }# end STRUCTURAL

   VARIABILITY{
      PPV_CL: {value=0.1}
      PPV_VC: {value=0.1}
      CORR_CL_VC : {value=0.01}
      PPV_Q: {value=0.1}
      PPV_VP: {value=0.1}
      PPV_KA: {value=0.1}
      PPV_TLAG: {value=0.1, fix=true}
      RUV_PROP: {value=0.1, lo=0}
      RUV_ADD: {value=0.1, lo=0}
    }# end VARIABILITY

} # end of parameter object

warfarin_PK_2Compartments_mdl = mdlObj{
   IDV{ TIME }

   COVARIATES{
      WT
      logtWT
   }# end COVARIATES

   VARIABILITY_LEVELS{
      ID: {type is parameter, level=2 }
      DV: {type is observation, level=1 }
   }# end VARIABILITY_LEVELS

   STRUCTURAL_PARAMETERS{
      POP_CL
      POP_VC
      POP_Q
      POP_VP
      POP_KA
      POP_TLAG
      POP_BETA_CL_WT
      POP_BETA_V_WT
   }# end STRUCTURAL_PARAMETERS

   VARIABILITY_PARAMETERS{
      PPV_CL
      PPV_VC
      CORR_CL_VC
      PPV_Q
      PPV_VP
      PPV_KA
      PPV_TLAG
      RUV_PROP
      RUV_ADD
   }# end VARIABILITY_PARAMETERS

   GROUP_VARIABLES{
   }# end GROUP_VARIABLES

   RANDOM_VARIABLE_DEFINITION (level=ID) {
      eta_PPV_CL ~ Normal(mean=0, sd=PPV_CL)
      eta_PPV_VC ~ Normal(mean=0, sd=PPV_VC)
      ::{type is correlation, rv1=eta_PPV_CL, rv2=eta_PPV_VC, value=CORR_CL_VC}
      eta_PPV_Q ~ Normal(mean=0, sd=PPV_Q)
      eta_PPV_VP ~ Normal(mean=0, sd=PPV_VP)
      eta_PPV_KA ~ Normal(mean=0, sd=PPV_KA)
      eta_PPV_TLAG ~ Normal(mean=0, sd=PPV_TLAG)
   }# end RANDOM_VARIABLE_DEFINITION (level=ID)

   INDIVIDUAL_VARIABLES{
     CL : {type is linear, trans is ln, pop = POP_CL, fixEff = [{coeff=POP_BETA_CL_WT, cov=logtWT}] , ranEff = eta_PPV_CL }
     VC  : {type is linear, trans is ln, pop = POP_VC, fixEff = [{coeff=POP_BETA_V_WT, cov=logtWT}] , ranEff = eta_PPV_VC }
     Q  : {type is linear, trans is ln, pop = POP_Q,  ranEff = eta_PPV_Q }
     VP  : {type is linear, trans is ln, pop = POP_VP,  ranEff = eta_PPV_VP }
     KA  : {type is linear, trans is ln, pop = POP_KA,  ranEff = eta_PPV_KA }
     TLAG  : {type is linear, trans is ln, pop = POP_TLAG, ranEff = eta_PPV_TLAG }
   }# end INDIVIDUAL_VARIABLES

   MODEL_PREDICTION{

   COMPARTMENT{
      ##  Parameters = CL,V2,Q,V3,KA,S2,ALAG1
      INPUT_KA : {type is depot, to=CENTRAL, ka=KA, tlag=TLAG}
      CENTRAL : {type is compartment }
      		:: {type is elimination, from=CENTRAL, v=VC, cl=CL}
      PERIPHERAL: {type is distribution, from=CENTRAL, kin=Q/VC, kout=Q/VP}
   }# end COMPARTMENT

      CC=CENTRAL/VC
   
   }# end MODEL_PREDICTION

   RANDOM_VARIABLE_DEFINITION (level=DV) {
      eps_RUV_EPS1 ~ Normal(mean=0, sd=1)
   }# end RANDOM_VARIABLE_DEFINITION (level=DV)

   OBSERVATION{
         CC_obs : {type is combinedError1, additive = RUV_ADD, proportional = RUV_PROP, eps = eps_RUV_EPS1, prediction = CC } 
   }# end OBSERVATION


} # end of model object

warfarin_PK_ODE_task = taskObj {
	ESTIMATE{ 
		set algo is saem
	}
} # end of task object




warfarin_PK_ODE_mog = mogObj {
	OBJECTS{
		warfarin_PK_2Compartments_dat : { type is dataObj }
		warfarin_PK_2Compartments_par : { type is parObj }
		warfarin_PK_2Compartments_mdl : { type is mdlObj }
		warfarin_PK_ODE_task : { type is taskObj }
	}
}
